el6 currently has scipy 0.7 and the following is only supported by 0.8:
  networkx.current_flow_betweenness_centrality(...,normalized=False,...)

Also on el6 the drawing/tests/test_layout.py fails as the following is only supported by 0.8:
  scipy.sparse.linalg.eigen_symmetric

diff -Naur networkx-1.8.1.orig/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality.py networkx-1.8.1/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality.py
--- networkx-1.8.1.orig/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality.py	2013-08-04 13:53:31.000000000 +0000
+++ networkx-1.8.1/networkx/algorithms/centrality/tests/test_current_flow_betweenness_centrality.py	2014-03-17 21:37:38.623458820 +0000
@@ -41,17 +41,6 @@
         for n in sorted(G):
             assert_almost_equal(b[n],wb_answer[n])
 
-    def test_K4(self):
-        """Betweenness centrality: K4"""
-        G=networkx.complete_graph(4)
-        for solver in ['full','lu','cg']:
-            b=networkx.current_flow_betweenness_centrality(G, normalized=False, 
-                                                           solver=solver)
-            b_answer={0: 0.75, 1: 0.75, 2: 0.75, 3: 0.75}
-            for n in sorted(G):
-                assert_almost_equal(b[n],b_answer[n])
-
-
     def test_P4_normalized(self):
         """Betweenness centrality: P4 normalized"""
         G=networkx.path_graph(4)
@@ -80,16 +69,6 @@
 
 
 
-    def test_solers(self):
-        """Betweenness centrality: alternate solvers"""
-        G=networkx.complete_graph(4)
-        for solver in ['full','lu','cg']:
-            b=networkx.current_flow_betweenness_centrality(G,normalized=False, 
-                                                           solver=solver)
-            b_answer={0: 0.75, 1: 0.75, 2: 0.75, 3: 0.75}
-            for n in sorted(G):
-                assert_almost_equal(b[n],b_answer[n])
-
 
 
 class TestApproximateFlowBetweennessCentrality(object):
diff -Naur networkx-1.8.1.orig/networkx/drawing/tests/test_layout.py networkx-1.8.1/networkx/drawing/tests/test_layout.py
--- networkx-1.8.1.orig/networkx/drawing/tests/test_layout.py	2013-08-04 13:53:31.000000000 +0000
+++ networkx-1.8.1/networkx/drawing/tests/test_layout.py	2014-03-17 21:40:40.192283827 +0000
@@ -46,16 +46,3 @@
         pos=nx.drawing.layout._fruchterman_reingold(A)
         pos=nx.drawing.layout._fruchterman_reingold(A,dim=3)
         assert_equal(pos.shape,(6,3))
-
-    def test_adjacency_interface_scipy(self):
-        try:
-            import scipy
-        except ImportError:
-            raise SkipTest('scipy not available.')
-
-        A=nx.to_scipy_sparse_matrix(self.Gs,dtype='f')
-        pos=nx.drawing.layout._sparse_fruchterman_reingold(A)
-        pos=nx.drawing.layout._sparse_spectral(A)
-
-        pos=nx.drawing.layout._sparse_fruchterman_reingold(A,dim=3)
-        assert_equal(pos.shape,(6,3))
